name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        if: exists('requirements.txt')

      - name: Install Node.js dependencies
        run: |
          npm ci
        if: exists('package.json')

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run TypeScript linter
        run: |
          npm run lint
        if: exists('package.json')

      - name: Run Python linter
        run: |
          pip install flake8
          flake8 .
        if: exists('requirements.txt')

  test:
    runs-on: ubuntu-latest
    needs: [setup, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run TypeScript tests
        run: |
          npm test
        if: exists('package.json')

      - name: Run Python tests
        run: |
          pip install pytest
          pytest
        if: exists('requirements.txt')

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --iidfile /tmp/docker-build-push-XPYjbB/iidfile \
            --tag genz-trading-platform:latest \
            --metadata-file /tmp/docker-build-push-XPYjbB/metadata-file \
            --push .
